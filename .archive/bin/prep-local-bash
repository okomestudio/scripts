#!/usr/bin/env bash

set -e


function usage() {
  cat <<USAGE >&2
Usage: ${0##*/} [path]

Prepare the directory with a local configuration file named .bash_local.

  path  Directory to prepare (default: current directory)

USAGE
  exit "${1:-1}"
}


function error() {
  >&2 echo "ERROR: $1"
  exit "${2:-1}"
}


function bash_local() {
  set +e
  read -r -d '' content <<EOF
# Declare, define, and export variables, if any:
#export MYVAR=somevalue

# Activate virtual environment, if any:
if [ -f .python-version ]; then
  pyenv activate
  echo "pyenv activated the \$(pyenv version-name) environment"
fi
EOF
  set -e
  echo "$content"
}


function ensure() {
  local path=$1
  local content=$2
  [[ ! -f $path ]] \
    && { echo "$content" > "$path" ; echo "${path} created"; } \
    || echo "${path} already exists"
}


function main() {
  local path=${1:-.}
  [[ ! -d $path ]] && error "$path is not a directory"
  ensure "${path%/}/.bash_local" "$(bash_local)"
}


while getopts "h" opt; do
  case $opt in
    h)
      usage 0
      ;;
    \?)
      usage
      ;;
    :)
      error "Option -$OPTARG requires an argument"
      ;;
  esac
done
shift $((OPTIND - 1))

main "$@"
