# -*- mode: sh; sh-basic-offset: 2; -*-
# ~/.bashrc: executed by bash(1) for non-login shells.
#
# See /etc/skel/.bashrc for template.

case $- in
  *i*) ;;
  *) return;;
esac

HISTCONTROL=ignoreboth

shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000

shopt -s checkwinsize
shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color|*-256color) color_prompt=yes;;
esac

force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    color_prompt=yes
  else
    color_prompt=
  fi
fi

# PS1="[${base_info}]\$"

# if [ -n "$color_prompt" ]; then
#   if [[ -n "$SSH_CLIENT" ]]; then
#     # Remote shell over SSH
#     PS1="\[\e[0;31m\]${PS1}\[\e[m\]"
#   elif [[ -n "$STY" ]]; then
#     # Within the `screen` command
#     PS1="\[\e[0;32m\]${PS1}\[\e[m\]"
#   fi
# fi

# PS1="${PS1} "

# unset force_color_prompt base_info

# if [ -f ~/.bash_aliases ]; then
#   . ~/.bash_aliases
# fi


#export LS_COLORS='ex=00;35:ln=00;32'
export LS_COLORS="${LS_COLORS}:ex=32"
export LC_COLLATE=C

# Misc
export AWS_PAGER=""
export BROWSER=google-chrome
export EDITOR=nano
# export ALTERNATE_EDITOR=nano
export GIT_EDITOR=nano
export VISUAL="emacsclient -nc"
export PAGER=less

##############################################################################
# less
LESS='-S'

# Add syntax highlighting via Pygments if possible
if [ -n "$color_prompt" ] && command -v pygmentize >&/dev/null; then
  LESS="$LESS -R"
  LESSOPEN='|~/.lessfilter %s'
  export LESSOPEN
fi
export LESS

unset color_prompt

##############################################################################
# Java
export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

##############################################################################
# Python
export PYTHONIOENCODING=utf-8

# BEGIN by pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  export PYENV_VIRTUALENV_DISABLE_PROMPT=1  # avoid pyenv to modify prompt
  export PYENV_VIRTUALENV_VERBOSE_ACTIVATE=1
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi
# END by pyenv

##############################################################################
# autojump
if [[ -f /usr/share/autojump/autojump.sh ]]; then
  source /usr/share/autojump/autojump.sh
fi

#################################################################################
# Bash-it customization (See: bash-it/template/bash_profile.template.bash)
export BASH_IT=~/github.com/Bash-it/bash-it
if [ ! -d $BASH_IT ]; then
  return
fi

if [ -d ~/github.com/okomestudio/environment/bash-it ]; then
  export BASH_IT_CUSTOM=~/github.com/okomestudio/environment/bash-it
fi

export POWERLINE_PROMPT_CHAR="$"
export POWERLINE_PYTHON_VENV_CHAR="$(printf %b '\u200b')"
export POWERLINE_CWD_COLOR=255
export POWERLINE_HOST_COLOR=195
export POWERLINE_PYTHON_VENV_COLOR=192
export POWERLINE_SCM_CLEAN_COLOR=195
export POWERLINE_SCM_DIRTY_COLOR=225
export POWERLINE_SCM_STAGED_COLOR=114
export POWERLINE_SCM_UNSTAGED_COLOR=211
export POWERLINE_USER_INFO_COLOR=255
export POWERLINE_LEFT_PROMPT="cwd scm python_venv aws_profile"
export POWERLINE_RIGHT_PROMPT="in_vim battery hostname user_info"

export SCM_GIT_IGNORE_UNTRACKED=true

export BASH_IT_THEME='powerline-multiline'
export GIT_HOSTING='git@git.domain.com'

unset MAILCHECK

export IRC_CLIENT='irssi'
export TODO="t"
export SCM_CHECK=true

source "$BASH_IT"/bash_it.sh

##############################################################################
# emacs-vterm
if [[ "$INSIDE_EMACS" = 'vterm' ]] && [[ -f ~/.config/emacs/etc/vterm-bash.sh ]]; then
	source ~/.config/emacs/etc/vterm-bash.sh
fi

##############################################################################
# direnv
if command -v direnv >&/dev/null; then
  eval "$(direnv hook bash)"
fi
