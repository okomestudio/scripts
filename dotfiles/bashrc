# -*- mode: sh; sh-basic-offset: 2; -*-
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
  *i*) ;;
  *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# # set variable identifying the chroot you work in (used in the prompt below)
# if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
#   debian_chroot=$(cat /etc/debian_chroot)
# fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and
    # such a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

# # Update fancy prompt
# base_info='${debian_chroot:+($debian_chroot)}\u@\h \W'

# # When in a git repo tree, show the branch name
# if [[ -e /etc/bash_completion.d/git-prompt ]]; then
#   . /etc/bash_completion.d/git-prompt
#   base_info=${base_info}'$(__git_ps1 "(%s)")'
# fi

# PS1="[${base_info}]\$"

# if [ -n "$color_prompt" ]; then
#   if [[ -n "$SSH_CLIENT" ]]; then
#     # Remote shell over SSH
#     PS1="\[\e[0;31m\]${PS1}\[\e[m\]"
#   elif [[ -n "$STY" ]]; then
#     # Within the `screen` command
#     PS1="\[\e[0;32m\]${PS1}\[\e[m\]"
#   fi
# fi

# PS1="${PS1} "

# unset force_color_prompt base_info

# # If this is an xterm set the title to user@host:dir
# case "$TERM" in
#   xterm*|rxvt*)
#     PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
#     ;;
#   *)
#     ;;
# esac


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
# if [ -f ~/.bash_aliases ]; then
#   . ~/.bash_aliases
# fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
# if ! shopt -oq posix; then
#   if [ -f /usr/share/bash-completion/bash_completion ]; then
#     . /usr/share/bash-completion/bash_completion
#   elif [ -f /etc/bash_completion ]; then
#     . /etc/bash_completion
#   fi
# fi


#export LS_COLORS='ex=00;35:ln=00;32'
export LS_COLORS="${LS_COLORS}:ex=32"
export LC_COLLATE=C

# Misc
export BROWSER=google-chrome
export EDITOR="emacs -nw"
export ALTERNATE_EDITOR="nano"
export GIT_EDITOR=nano
#export VISUAL="emacs"
export PAGER=less

##############################################################################
# less
LESS='-S'

# Add syntax highlighting via Pygments if possible
if [ -n "$color_prompt" ] && command -v pygmentize >&/dev/null; then
  LESS="$LESS -R"
  LESSOPEN='|~/.lessfilter %s'
  export LESSOPEN
fi
export LESS

unset color_prompt

##############################################################################
# Java
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

##############################################################################
# Python
export PYTHONIOENCODING=utf-8

# BEGIN by pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  export PYENV_VIRTUALENV_DISABLE_PROMPT=1  # avoid pyenv to modify prompt
  export PYENV_VIRTUALENV_VERBOSE_ACTIVATE=1
  # With --no-rehash, venv auto-activation does not work
  #eval "$(pyenv init - --no-rehash bash)"
  #eval "$(pyenv virtualenv-init - --no-rehash bash)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi
# END by pyenv

##############################################################################
# bash-it customization
export BASH_IT=~/github.com/Bash-it/bash-it
if [ ! -d $BASH_IT ]; then
  return
fi

if [ -d ~/github.com/okomestudio/environment/bash-it ]; then
  export BASH_IT_CUSTOM=~/github.com/okomestudio/environment/bash-it
fi

export POWERLINE_PROMPT_CHAR="$"
export POWERLINE_PYTHON_VENV_CHAR="$(printf %b '\u200b')"

export POWERLINE_CWD_COLOR=255
export POWERLINE_HOST_COLOR=195
export POWERLINE_PYTHON_VENV_COLOR=192
export POWERLINE_SCM_CLEAN_COLOR=195
export POWERLINE_SCM_DIRTY_COLOR=225
export POWERLINE_SCM_STAGED_COLOR=114
export POWERLINE_SCM_UNSTAGED_COLOR=211
export POWERLINE_USER_INFO_COLOR=255

export POWERLINE_LEFT_PROMPT="cwd scm python_venv aws_profile"
export POWERLINE_RIGHT_PROMPT="in_vim battery hostname user_info"

export SCM_GIT_IGNORE_UNTRACKED=true

##############################################################################
# BEGIN: bash-it template

# Lock and Load a custom theme file.
# Leave empty to disable theming.
# location /.bash_it/themes/
export BASH_IT_THEME='powerline-multiline'

# (Advanced): Change this to the name of your remote repo if you
# cloned bash-it with a remote other than origin such as `bash-it`.
# export BASH_IT_REMOTE='bash-it'

# Your place for hosting Git repos. I use this for private repos.
export GIT_HOSTING='git@git.domain.com'

# Don't check mail when opening terminal.
unset MAILCHECK

# Change this to your console based IRC client of choice.
export IRC_CLIENT='irssi'

# Set this to the command you use for todo.txt-cli
export TODO="t"

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true

# Set Xterm/screen/Tmux title with only a short hostname.
# Uncomment this (or set SHORT_HOSTNAME to something else),
# Will otherwise fall back on $HOSTNAME.
#export SHORT_HOSTNAME=$(hostname -s)

# Set Xterm/screen/Tmux title with only a short username.
# Uncomment this (or set SHORT_USER to something else),
# Will otherwise fall back on $USER.
#export SHORT_USER=${USER:0:8}

# Set Xterm/screen/Tmux title with shortened command and directory.
# Uncomment this to set.
#export SHORT_TERM_LINE=true

# Set vcprompt executable path for scm advance info in prompt (demula theme)
# https://github.com/djl/vcprompt
#export VCPROMPT_EXECUTABLE=~/.vcprompt/bin/vcprompt

# (Advanced): Uncomment this to make Bash-it reload itself automatically
# after enabling or disabling aliases, plugins, and completions.
# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1

# Uncomment this to make Bash-it create alias reload.
# export BASH_IT_RELOAD_LEGACY=1

# Load Bash It
source "$BASH_IT"/bash_it.sh
